create database monitor_db;

-- You can create at view that combines account_usage.query_history and account_usage.warehouse_metering_history to show the estimated credits per job
create or replace view est_job_credits as 
select distinct q.warehouse_name
    ,q.user_name
    ,q.role_name
    ,q.query_id
    ,q.start_time
    ,q.query_text
    ,c.meter_hour
    ,c.credits as total_warehouse_credits
    ,sum(q.execution_time) over (partition by q.warehouse_name, c.meter_hour, q.user_name,q.query_id) as total_query_time
    ,sum(q.execution_time) over (partition by q.warehouse_name, c.meter_hour) as total_warehouse_time
    ,((sum(q.execution_time) over (partition by q.warehouse_name, c.meter_hour, q.user_name, q.query_id))/nullif((sum(q.execution_time) over (partition by q.warehouse_name, c.meter_hour)),0))::number(38,5) as query_ratio
    ,(c.credits*(sum(q.execution_time) over (partition by q.warehouse_name, c.meter_hour, q.user_name, q.query_id))/nullif((sum(q.execution_time) over (partition by q.warehouse_name, c.meter_hour)),0))::number(38,5) as est_credits
from snowflake.account_usage.query_history q
left join(
    select warehouse_name
        ,to_char(start_time, 'yyyy-mm-dd hh24') as meter_hour
        ,sum(credits_used) as credits
   from snowflake.account_usage.warehouse_metering_history
   where warehouse_name is NOT NULL
   group by 1,2
) as c
on q.warehouse_name=c.warehouse_name 
and to_char(q.start_time, 'yyyy-mm-dd hh24')=c.meter_hour
where q.execution_time>0              
    and q.warehouse_size is NOT NULL
    and c.credits>0
-- and to_char(start_time, 'yyyy-mm-dd hh24')='2018-08-20 17' -- if you want to look at certain time windows
-- and c.warehouse_name='ds_wh' -- or a certain warehouse
order by est_credits desc;

-- Use view to view top 100 jobs in last 3 months 
select * 
from est_job_credits
where start_time >= date_trunc(month, dateadd(month, -1, current_timestamp)) --filter for past month
    and start_time < date_trunc(month, current_timestamp)
order by est_credits desc
limit 100;

-- Use view to see which role that have used the most credits in the past month
select role_name
    ,sum(est_credits) total_consumption
from est_job_credits
where start_time >= date_trunc(month, dateadd(month, -1, current_timestamp)) --filter for past three calendar months
    and start_time < date_trunc(month, current_timestamp)
group by 1
order by total_consumption desc;

-- Use view to see which warehouse that have used the most credits in the past month
select warehouse_name
    ,sum(est_credits) total_consumption
from est_job_credits
where start_time >= date_trunc(month, dateadd(month, -1, current_timestamp)) --filter for past three calendar months
    and start_time < date_trunc(month, current_timestamp)
group by 1
order by total_consumption desc;
